apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ include "orbit.fullname" . }}
    labels:
        app: {{ include "orbit.name" . }}
        chart: {{ include "orbit.chart" . }}
        release: {{ .Release.Name }}
        component: node
spec:
    serviceName: {{ include "orbit.fullname" . }}
    replicas: {{ .Values.node.replicas }}
    selector:
        matchLabels:
            app: {{ include "orbit.name" . }}
            release: {{ .Release.Name }}
            component: node
    template:
        metadata:
            labels:
                app: {{ include "orbit.name" . }}
                release: {{ .Release.Name }}
                component: node
        spec:
            containers:
                - name: node
                  image: orbitframework/orbit:{{ .Values.image.version }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  ports:
                      - containerPort: {{ .Values.node.containerPort }}
                  env:
                      - name: ORBIT_HOST
                        valueFrom:
                            fieldRef:
                                fieldPath: status.podIP
                      - name: ORBIT_PORT
                        value: {{ .Values.node.containerPort | quote }}
                      - name: ORBIT_URL
                        value: "$(ORBIT_HOST):{{ .Values.node.containerPort }}"
                      - name: ORBIT_SETTINGS
                        value: /etc/orbit/orbit.conf
                  readinessProbe:
                      exec:
                          command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.node.containerPort }}"]
                      initialDelaySeconds: 5
                  livenessProbe:
                      exec:
                          command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.node.containerPort }}"]
                      initialDelaySeconds: 10
                  volumeMounts:
                      - name: configmap
                        mountPath: /etc/orbit/orbit.conf
                        subPath: config.json
            volumes:
              - name: configmap
                configMap:
                    name: configmap

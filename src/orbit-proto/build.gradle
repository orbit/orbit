/*
 Copyright (C) 2015 - 2019 Electronic Arts Inc.  All rights reserved.
 This file is part of the Orbit Project <https://www.orbit.cloud>.
 See license in LICENSE.
 */

import org.apache.tools.ant.filters.ConcatFilter

def tempDir = "build/tmp/js"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("com.google.protobuf:protobuf-gradle-plugin:$protobufPluginVersion")
    }
}

apply plugin: "com.google.protobuf"

dependencies {
    compile("com.google.protobuf:protobuf-java:$protobufVersion")
    compile("io.grpc:grpc-protobuf:$grpcVersion")
    compile("io.grpc:grpc-stub:$grpcVersion")
    compileOnly("javax.annotation:javax.annotation-api:1.2")
    compile("org.jetbrains.kotlinx:kotlinx-coroutines-guava:$kotlinCoroutinesVersion")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion" }
        grpckotlin { artifact = "io.rouz:grpc-kotlin-gen:$grpcKotlinVersion:jdk8@jar" }
        "grpc-web" {
            path = "$rootProject.projectDir/tools/bin/protoc-gen-grpc-web"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckotlin {}
            "grpc-web" {
                option 'import_style=commonjs'
                option 'mode=grpcwebtext'
                outputSubDir = 'js'
            }
        }

        all().each { task ->
            task.builtins {
                js {
                    option "import_style=commonjs"
                    option "binary"
                }
            }
        }
    }
}

task generateGrpcWeb(type: Exec) {
    commandLine "protoc"
    args "--grpc-web_out=import_style=commonjs,mode=grpcwebtext:."
}

task disableLint(type: Copy) {
    from file(buildDir.getAbsolutePath() + "/generated/source/proto/main/js")
    into file(buildDir.getAbsolutePath() + "/generated/source/proto/main/js-nolint")
    include '**/*.js'
    includeEmptyDirs false
    filter(ConcatFilter, prepend: file('./header.txt'))
}

sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/java")
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/grpckotlin")
        }
    }
}
